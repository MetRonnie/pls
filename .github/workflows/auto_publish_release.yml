name: Release stage 2 - auto publish

on:
  pull_request:  # types AND paths
    types: [closed]
    paths: ['metomi/isodatetime/__init__.py']
    # Don't use branches as we might create release on any branch

env:
  # Best not to include the GH token here, only do it for the steps that need it
  REPOSITORY: ${{ github.repository }}
  MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
  CHANGELOG_FILE: CHANGES.md

jobs:
  publish:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'prepare-') # Can't use top-level env here
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PR_BRANCH_PREFIX: 'prepare-'
    steps:

    - name: Get the version number
      run: |
        VERSION=$( grep -oP "(?<=${PR_BRANCH_PREFIX}).*" <<< '${{ github.head_ref }}' )
        if [[ -z "$VERSION" ]]; then
          echo "::error:: Could not get version name from PR branch name '${{ github.head_ref }}'"
          exit 1
        fi
        echo "::set-env name=VERSION::$VERSION"

    - name: Checkout repo
      uses: actions/checkout@v2.3.1
      with:
        ref: ${{ env.MERGE_SHA }}

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Build
      continue-on-error: true
      run: |
        python3 setup.py bdist_wheel sdist
        if ! grep -qF ".whl" <<< "$( ls dist/ )"; then
          echo "::error:: Wheel file not built"
          exit 1
        fi

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        user: __token__ # uses the API token feature of PyPI - least permissions possible
        password: ${{ secrets.PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish GitHub release
      id: create-release
      uses: actions/create-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commitish: ${{ env.MERGE_SHA }}
        tag_name: ${{ env.VERSION }}
        release_name: isodatetime ${{ env.VERSION }}
        body: See [${{ env.CHANGELOG_FILE }}](https://github.com/${{ github.repository }}/blob/master/${{ env.CHANGELOG_FILE }}) for detail. # TODO: preview this info in the PR? Posibly get release number; add description field in the create-release-pr workflow input?
        draft: false

    - name: Comment on the release PR with the results
      if: always()
      env:
        WORKFLOW: ${{ github.workflow }}
        RUN_NUMBER: ${{ github.run_number }}
        JOB_STATUS: ${{ job.status }}
        RELEASE_URL: ${{ steps.create-release.outputs.html_url }}
        PR_EVENT: ${{ toJson(github.event.pull_request) }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: node .github/bin/comment_on_pr.js

    - name: Delete the PR branch
      if: always()
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -X DELETE \
          https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ github.event.pull_request.head.ref }} \
          -H "authorization: Bearer $GITHUB_TOKEN"
