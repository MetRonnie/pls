name: Release stage 2 - auto publish

on:
  pull_request:  # types AND paths
    types: [closed]
    paths: ['metomi/isodatetime/__init__.py']
    # NOTE: While this is too generic, we use the `if` condition of the job to narrow it down
    # NOTE: Don't use `branches` as we might create release on any branch

env:
  # Best not to include the GH token here, only do it for the steps that need it
  MERGE_SHA: ${{ github.event.pull_request.merge_commit_sha }}
  CHANGELOG_FILE: CHANGES.md

jobs:
  publish:
    if: >-  # NOTE: Can't use top-level env here unfortunately
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Get the version number
      uses: MetRonnie/release-actions/stage-2/get-version-from-pr@content

    - name: Checkout repo
      uses: actions/checkout@v2.3.2
      with:
        ref: ${{ env.MERGE_SHA }}

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Build
      uses: MetRonnie/release-actions/build-python-package@content

    - name: Publish distribution to PyPI
      continue-on-error: true
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        user: __token__ # uses the API token feature of PyPI - least permissions possible
        password: ${{ secrets.PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish GitHub release
      id: create-release
      uses: actions/create-release@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commitish: ${{ env.MERGE_SHA }}
        tag_name: ${{ env.VERSION }}
        release_name: isodatetime ${{ env.VERSION }}
        body: See [${{ env.CHANGELOG_FILE }}](https://github.com/${{ github.repository }}/blob/master/${{ env.CHANGELOG_FILE }}) for detail.
        # TODO: Get topmost changelog section somehow and use that as the body?

    - name: Comment on the release PR with the results & next steps
      if: always()
      uses: MetRonnie/release-actions/stage-2/comment-on-pr@content
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release-url: ${{ steps.create-release.outputs.html_url }}
